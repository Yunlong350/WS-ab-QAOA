import numpy as np
import matplotlib.pyplot as plt
from matplotlib.legend_handler import HandlerLine2D, HandlerTuple

n_list=np.array([200+i*100 for i in range(9)])


GW=np.zeros((9,40))
ab=np.zeros((9,40))
bias=np.zeros((9,40))

#n=200
GW[0]=np.array([264., 264., 259., 259., 266., 259., 268., 263., 268., 264., 263.,
       261., 258., 264., 263., 266., 262., 266., 258., 263., 261., 259.,
       255., 266., 267., 263., 264., 263., 263., 262., 267., 261., 267.,
       264., 261., 267., 268., 263., 256., 267.])
ab[0]=np.array([270.89025522, 270.99867278, 267.80608491, 266.85511934,
       272.82112515, 267.83309054, 271.811359  , 270.87636467,
       274.82270527, 271.99829184, 270.87759748, 268.9983361 ,
       265.99868843, 270.91069708, 270.88251705, 269.80972652,
       269.81503352, 272.99872844, 268.82106785, 270.99879499,
       267.81971078, 269.99891011, 266.82429056, 270.99802341,
       273.99857605, 269.84592838, 269.83909428, 269.99882609,
       272.79963112, 269.99814428, 274.87743328, 270.99880831,
       269.83269505, 272.82022031, 271.99781859, 271.82578844,
       272.90555598, 266.83055916, 264.99841075, 273.88053336])
bias[0]=np.array([271., 271., 268., 267., 273., 268., 272., 271., 275., 272., 271.,
              269., 266., 271., 271., 270., 270., 273., 269., 271., 268., 270.,
              267., 271., 274., 270., 270., 270., 273., 270., 275., 271., 270.,
              273., 272., 272., 273., 267., 265., 274.])

#n=300
GW[1]=np.array([395., 389., 393., 389., 385., 400., 396., 403., 393., 403., 399.,
       397., 396., 398., 394., 396., 400., 391., 395., 395., 398., 393.,
       391., 391., 404., 403., 389., 397., 391., 396., 395., 392., 397.,
       389., 395., 397., 395., 399., 397., 403.])
ab[1]=np.array([406.99753126, 405.99779329, 406.99795909, 401.75120874,
       402.7061582 , 408.99746714, 407.99790702, 408.99773811,
       405.99756451, 410.99758917, 408.82380916, 404.9975733 ,
       404.74183314, 406.74871302, 406.81231547, 407.70509645,
       410.99675168, 406.99774477, 404.72270801, 407.99804674,
       405.7144909 , 401.99773921, 407.99808211, 404.71728599,
       410.99772419, 408.74385938, 407.99809869, 410.80956705,
       404.99794648, 408.99781518, 407.82029545, 406.99803529,
       406.99763583, 404.99831877, 403.73621488, 406.77538291,
       404.71759436, 407.84475813, 407.73795449, 412.71038936])
bias[1]=np.array([407., 406., 407., 402., 403., 409., 408., 409., 406., 411., 409.,
       405., 405., 407., 407., 408., 411., 407., 405., 408., 406., 402.,
       408., 405., 411., 409., 408., 411., 405., 409., 408., 407., 407.,
       405., 404., 407., 405., 408., 408., 413.])

#n=400
GW[2]=np.array([530., 531., 526., 525., 540., 529., 525., 524., 537., 531., 521.,
       519., 526., 523., 526., 534., 530., 540., 526., 533., 527., 524.,
       527., 527., 527., 532., 531., 528., 530., 530., 532., 527., 529.,
       537., 524., 531., 526., 533., 535., 524.])
ab[2]=np.array([539.99707464, 546.62899112, 538.99652304, 537.99659186,
       549.63030703, 540.65727033, 540.99762701, 539.64176328,
       548.62717078, 547.99721784, 537.6350968 , 539.63589089,
       540.63450099, 539.61362387, 540.64390441, 543.61822287,
       540.99693861, 545.66320841, 536.99694264, 540.99678502,
       543.99771333, 541.65936131, 536.99678737, 540.62625291,
       537.65962726, 544.99711587, 543.99670443, 541.99660699,
       541.6815549 , 539.99589941, 540.67188653, 542.6253867 ,
       544.99724345, 545.63754934, 538.99731685, 542.66707145,
       537.67002194, 542.64440351, 544.62775822, 537.64564005])
bias[2]=np.array([540., 547., 539., 538., 550., 541., 541., 540., 549., 548., 538.,
       540., 541., 540., 541., 544., 541., 546., 537., 541., 544., 542.,
       537., 541., 538., 545., 544., 542., 542., 540., 541., 543., 545.,
       546., 539., 543., 538., 543., 545., 538.])


#n=500

GW[3]=np.array([663., 664., 669., 652., 665., 661., 668., 670., 667., 656., 662.,
       673., 665., 670., 643., 662., 661., 665., 659., 664., 658., 673.,
       667., 665., 658., 663., 670., 656., 650., 657., 648., 668., 670.,
       672., 667., 665., 657., 664., 668., 663.])
ab[3]=np.array([675.99850353, 680.99650788, 686.99677447, 676.99660195,
       683.99623556, 675.99622816, 687.99600532, 680.99565349,
       680.99661084, 674.99582355, 673.5986226 , 688.99589364,
       679.99611027, 681.99615755, 669.99678409, 680.99635147,
       681.99649285, 678.54997285, 675.54055518, 674.99896406,
       672.99884868, 686.99662027, 681.5761211 , 684.99666091,
       678.52179221, 678.53179716, 682.99653229, 681.99708326,
       673.99610154, 675.54416754, 674.53455782, 682.55993671,
       685.9962372 , 682.99584085, 680.5290894 , 676.99497232,
       677.99659887, 681.52293416, 681.99618728, 677.99653757])
bias[3]=np.array([676., 681., 687., 677., 684., 676., 688., 681., 681., 675., 674.,
       689., 680., 682., 670., 681., 682., 679., 676., 675., 673., 687.,
       682., 685., 679., 679., 683., 682., 674., 676., 675., 683., 686.,
       683., 681., 677., 678., 682., 682., 678.])
#n=600
GW[4]=np.array([799., 789., 810., 790., 802., 797., 800., 787., 805., 800., 796.,
       797., 806., 789., 798., 798., 806., 799., 791., 797., 806., 796.,
       798., 803., 803., 797., 807., 795., 793., 796., 792., 795., 782.,
       791., 803., 804., 796., 792., 794., 797.])
ab[4]=np.array([819.99570982, 812.99614399, 824.99519003, 815.99498784,
       815.46240973, 818.99588204, 817.99506399, 810.99500056,
       821.48299425, 820.9958932 , 813.99521999, 812.99498042,
       819.51121741, 813.99622288, 816.9952339 , 819.99544266,
       819.52455575, 818.99576756, 813.99546872, 815.99518566,
       815.99527238, 820.99558736, 816.52978783, 823.99547343,
       822.42986004, 815.99575421, 822.51111804, 815.99592591,
       818.99513712, 816.99569853, 816.99600953, 816.99571808,
       804.99850174, 814.9960911 , 816.43551879, 825.99575717,
       817.9955977 , 814.99469735, 818.48994842, 816.99556373])
bias[4]=np.array([820., 813., 825., 816., 816., 819., 818., 811., 822., 821., 814.,
       813., 820., 814., 817., 820., 820., 819., 814., 816., 816., 821.,
       817., 824., 823., 816., 823., 816., 819., 817., 817., 817., 805.,
       815., 817., 826., 818., 815., 819., 817.])


#n=700
GW[5]=np.array([935., 926., 926., 925., 935., 937., 920., 923., 913., 932., 923.,
       942., 928., 919., 924., 916., 928., 943., 922., 935., 935., 926.,
       931., 930., 930., 928., 918., 939., 922., 922., 914., 933., 918.,
       932., 922., 939., 941., 926., 922., 935.])
ab[5]=np.array([957.99502896, 951.34397539, 958.99555711, 953.99502159,
       956.99434277, 953.9944043 , 944.36973877, 952.99559984,
       947.99551094, 955.32896863, 953.34897112, 961.41047855,
       954.99523836, 943.99467599, 952.9948144 , 933.99838509,
       947.42125592, 956.37094   , 948.99806063, 951.37362564,
       956.32301509, 951.34107413, 951.99531721, 957.99482576,
       948.99472264, 955.99500512, 948.99532563, 957.99434354,
       946.37617108, 950.36600898, 943.99773921, 956.99512657,
       942.99796955, 950.41337692, 953.99484624, 954.38334055,
       955.99478194, 949.39304733, 951.99536759, 955.99528634])
bias[5]=np.array([958., 952., 959., 954., 957., 954., 945., 953., 948., 956., 954.,
       962., 955., 944., 953., 934., 948., 957., 949., 952., 957., 952.,
       952., 958., 949., 956., 949., 958., 947., 951., 944., 957., 943.,
       951., 954., 955., 956., 950., 952., 956.])


#n=800
GW[6]=np.array([1055., 1057., 1064., 1072., 1052., 1068., 1066., 1054., 1058.,
       1071., 1070., 1065., 1049., 1057., 1062., 1059., 1065., 1063.,
       1069., 1053., 1055., 1068., 1042., 1043., 1058., 1073., 1064.,
       1070., 1063., 1057., 1074., 1059., 1063., 1059., 1056., 1065.,
       1069., 1054., 1068., 1074.])
ab[6]=np.array([1086.99425085, 1085.9939782 , 1097.99424424, 1093.99433622,
       1083.99748033, 1092.99775973, 1086.99781835, 1085.99766672,
       1084.99426071, 1095.99407338, 1085.99805584, 1087.99328868,
       1086.99422211, 1090.99425813, 1094.99399875, 1089.99435365,
       1089.99405833, 1091.9974928 , 1089.99322546, 1084.99474396,
       1086.99468755, 1096.99370526, 1083.99490696, 1075.99748492,
       1089.99452658, 1093.99806613, 1085.99343146, 1095.99800769,
       1091.99413718, 1089.99448245, 1096.25691096, 1086.99462917,
       1089.99274329, 1088.9941937 , 1092.99465589, 1093.99452431,
       1086.99824215, 1077.36247288, 1091.9943947 , 1096.99402124])
bias[6]=np.array([1087., 1086., 1098., 1094., 1084., 1093., 1087., 1086., 1085.,
       1096., 1086., 1088., 1087., 1091., 1095., 1090., 1090., 1092.,
       1090., 1085., 1087., 1097., 1084., 1076., 1090., 1094., 1086.,
       1096., 1092., 1090., 1097., 1087., 1090., 1089., 1093., 1094.,
       1087., 1078., 1092., 1097.])

#n=900
GW[7]=np.array([1188., 1202., 1199., 1208., 1201., 1201., 1198., 1173., 1211.,
       1202., 1191., 1182., 1191., 1201., 1192., 1194., 1207., 1201.,
       1196., 1183., 1194., 1200., 1191., 1182., 1198., 1210., 1199.,
       1181., 1210., 1190., 1178., 1194., 1202., 1196., 1194., 1187.,
       1208., 1195., 1201., 1195.])
ab[7]=np.array([1224.99282574, 1225.99774665, 1228.99720233, 1232.25392687,
       1230.99296604, 1226.99301706, 1228.99351653, 1214.99759531,
       1233.992613  , 1223.99228188, 1220.99313739, 1227.99387308,
       1223.9933318 , 1226.99776164, 1225.99371242, 1226.9924564 ,
       1227.99780946, 1225.99768551, 1224.9932798 , 1224.99392676,
       1229.99340207, 1229.99355889, 1220.99764823, 1218.99407911,
       1220.99349533, 1226.99745412, 1227.24828821, 1223.99749157,
       1232.24557133, 1222.99364129, 1225.99375288, 1225.99757899,
       1219.99786347, 1230.99379795, 1224.99743735, 1224.99411872,
       1230.99328757, 1224.99265767, 1225.99280131, 1221.99223775])
bias[7]=np.array([1225., 1226., 1229., 1233., 1231., 1227., 1229., 1215., 1234.,
       1224., 1221., 1228., 1224., 1227., 1226., 1227., 1228., 1226.,
       1225., 1225., 1230., 1230., 1221., 1219., 1221., 1227., 1228.,
       1224., 1233., 1223., 1226., 1226., 1220., 1231., 1225., 1225.,
       1231., 1225., 1226., 1222.])


#n=1000
GW[8]=np.array([1336., 1326., 1329., 1333., 1327., 1324., 1321., 1336., 1318.,
       1325., 1337., 1331., 1323., 1338., 1333., 1331., 1336., 1319.,
       1325., 1332., 1325., 1325., 1339., 1331., 1345., 1322., 1325.,
       1322., 1339., 1329., 1338., 1327., 1332., 1329., 1331., 1331.,
       1331., 1317., 1328., 1323.])
ab[8]=np.array([1363.99243588, 1351.99769368, 1358.99176988, 1360.99703068,
       1359.9973483 , 1358.99246979, 1348.99726018, 1358.99746484,
       1356.99734768, 1360.99727787, 1366.99729585, 1359.9926254 ,
       1365.99332189, 1362.99204575, 1364.99266275, 1362.99245431,
       1369.9920454 , 1356.99714018, 1362.99232448, 1363.99709487,
       1361.99680423, 1359.99739573, 1367.99249354, 1358.99710453,
       1364.99234342, 1358.9968629 , 1361.99373329, 1359.99308219,
       1368.99194619, 1363.99723486, 1363.99761927, 1360.99712726,
       1361.99228921, 1363.99725285, 1357.99750699, 1364.99751867,
       1368.99277951, 1358.99369617, 1364.9927173 , 1356.99754593])
bias[8]=np.array([1364., 1352., 1359., 1361., 1360., 1359., 1349., 1359., 1357.,
       1361., 1367., 1360., 1366., 1363., 1365., 1363., 1370., 1357.,
       1363., 1364., 1362., 1360., 1368., 1359., 1365., 1359., 1362.,
       1360., 1369., 1364., 1364., 1361., 1362., 1364., 1358., 1365.,
       1369., 1359., 1365., 1357.])



fig,ax=plt.subplots()

b1,=ax.plot(n_list,2*np.mean(GW,axis=1)/n_list/3,color='#2673EF',marker='o',linestyle='-',label=r'$N_\mathrm{cut}^\mathrm{GW}/|\mathcal{E}|$')
b2,=ax.plot(n_list,2*np.mean(bias,axis=1)/n_list/3,color='#CD5257',marker='v',linestyle='-',label=r'$N_\mathrm{cut}^\mathrm{bias}/|\mathcal{E}|$')


ax.set_xlabel(r'$n$',fontsize=14)
ax.set_ylabel(r'$N_\mathrm{cut}^\mathrm{alg}/|\mathcal{E}|$',fontsize=14)
ax.set_xticks(n_list)
ax.set_ylim(0.870,0.920)
ax.legend(prop={'size': 12})
plt.tick_params(labelsize='13')
plt.savefig('Fig_cutn.pdf',format='pdf',dpi=1200,bbox_inches='tight')
plt.show()
